{"version":3,"sources":["webpack:///./src/pages/contact.tsx","webpack:///./src/components/StickyNav.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/components/Row.tsx","webpack:///./src/components/Container.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/Col.tsx"],"names":["MessageStyle","Contact","span","type","rows","css","Navbar","dimensions","containerPadding","NavLink","colors","black","white","red","lastNavLink","StickyNav","to","StyledPage","altWhite","trans","Page","children","className","id","Row","props","cssClass","Grid","getEmSize","widths","lg","Container","StyledFooter","brand","Footer","StyledCol","Col"],"mappings":"oNAaMA,EAAe,CAAH,gDA+BHC,UA1BC,kBACd,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,MACA,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,KAAM,GACT,iCACA,6BACA,qBAAOC,KAAK,SACZ,8BACA,qBAAOA,KAAK,UACZ,gCACA,wBAAUC,KAAM,EAAGC,IAAKL,IACxB,qBAAOG,KAAK,YAEd,YAAC,IAAD,CAAKD,KAAM,GACT,mCAIN,YAAC,IAAD,U,gHCjCAI,EAAS,mBAAH,mBAAG,CAAH,gKAUOC,IAAWC,iBAVlB,QAYNC,EAAUJ,YAAH,cACGK,IAAOC,MADV,UAEFD,IAAOE,MAFL,0DAKYF,IAAOG,IALnB,KAOPC,EAAc,CAAH,4C,oEAiCFC,IA9BG,kBAChB,YAACT,EAAD,KACE,YAAC,OAAD,CACEU,GAAG,IACHX,IAAG,YAAE,CACHI,EADG,KAFP,aAmBA,YAAC,OAAD,CAAMO,GAAG,YAAYX,IAAKI,GAA1B,YAGA,YAAC,OAAD,CAAMO,GAAG,WAAWX,IAAG,YAAE,CAACI,EAASK,KAAnC,c,wFC/CEG,EAAa,mBAAH,oBAAG,CAAH,2EAMMP,IAAOC,MANb,yBAOUD,IAAOQ,SAASC,MAP1B,sBAqBDC,IANmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAb,OAChC,YAACL,EAAD,CAAYM,GAAG,IAAID,UAAWA,GAC3BD,K,oFCpBQG,EAAM,mBAAH,mBAAG,CAAH,mKAQZ,SAACC,GAAD,OAAqBA,EAAMC,UAAY,O,kGCDrCC,EAAO,uBAAH,oBAAG,CAAH,gEAIKC,YAAUC,IAAOC,IAJtB,gBAKKvB,IAAWC,iBALhB,mBAON,SAACiB,GAAD,OAA2BA,EAAMC,UAAY,MAKlCK,IAF6B,SAAC,GAAD,IAAGV,EAAH,EAAGA,SAAUK,EAAb,EAAaA,SAAb,OAA4B,YAACC,EAAD,CAAMD,SAAUA,GAAWL,K,kGCb7FW,EAAe,sBAAH,oBAAG,CAAH,iDAGFtB,IAAOuB,MAHL,mFAYFvB,IAAOC,MACZD,IAAOE,MAGOF,IAAOG,IAYjBqB,IATA,kBACb,YAACF,EAAD,KACE,wCACA,wBACE,YAAC,OAAD,CAAMhB,GAAG,YAAT,cADF,MAC0C,YAAC,OAAD,CAAMA,GAAG,aAAT,gB,8DCpBxCmB,G,UAAY,mBAAH,oBAAG,CAAH,qBACO,SAACV,GAAD,OAAqBA,EAAMvB,OADlC,KAEX,SAACuB,GAAD,OAAqBA,EAAMC,UAAY,OAW5BU,IARiB,SAAC,GAAiC,IAA/Bf,EAA+B,EAA/BA,SAAUK,EAAqB,EAArBA,SAAUxB,EAAW,EAAXA,KACrD,OACE,YAACiC,EAAD,CAAWT,SAAUA,EAAUxB,KAAMA,GAClCmB","file":"component---src-pages-contact-tsx-bd65d370e84004f5c400.js","sourcesContent":["import * as React from 'react'\r\nimport { css } from '@emotion/core'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport IndexLayout from '../layouts'\r\nimport Page from '../components/Page'\r\nimport { Row } from '../components/Row'\r\nimport Col from '../components/Col'\r\nimport Container from '../components/Container'\r\nimport { colors } from '../styles/variables'\r\nimport StickyNav from '../components/StickyNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst MessageStyle = css`\r\n  width: 100%;\r\n  resize: none;\r\n`\r\n\r\nconst Contact = () => (\r\n  <IndexLayout>\r\n    <Page>\r\n      <StickyNav />\r\n      <Container>\r\n        <Row>\r\n          <Col span={3}>\r\n            <h1>Contact</h1>\r\n            <p>Name</p>\r\n            <input type=\"text\" />\r\n            <p>Email</p>\r\n            <input type=\"email\" />\r\n            <p>Message</p>\r\n            <textarea rows={8} css={MessageStyle} />\r\n            <input type=\"submit\" />\r\n          </Col>\r\n          <Col span={3}>\r\n            <p>Hire me</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </Page>\r\n  </IndexLayout>\r\n)\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport { css } from '@emotion/core'\r\nimport { colors, dimensions } from '../styles/variables'\r\n\r\nconst Navbar = styled.nav`\r\n  position: sticky;\r\n  position: -webkit-sticky;\r\n  display: flex;\r\n  top: 0px;\r\n  z-index: 99999;\r\n  // background: ${colors.black};\r\n  background: transparent;\r\n  padding: 0.5rem 1rem;\r\n  justify-content:flex-end;\r\n  margin-bottom: ${dimensions.containerPadding}rem;\r\n`\r\nconst NavLink = css`\r\n  background: ${colors.black};\r\n  color: ${colors.white};\r\n  padding: 0.5rem 1rem;\r\n  margin: 0.5rem;\r\n  border: 0.1rem solid ${colors.red};\r\n`\r\nconst lastNavLink = css`\r\n  margin-right: 5rem;\r\n`\r\nconst StickyNav = () => (\r\n  <Navbar>\r\n    <Link\r\n      to=\"/\"\r\n      css={[\r\n        NavLink,\r\n        css`\r\n          display: inline-block;\r\n          margin-right: auto;\r\n        `\r\n      ]}\r\n    >\r\n      {/* <h1\r\n        css={css`\r\n          display: inline-block;\r\n          margin-left: auto;\r\n        `}\r\n      > */}\r\n      Ross MacD\r\n      {/* </h1> */}\r\n    </Link>\r\n    <Link to=\"/projects\" css={NavLink}>\r\n      Projects\r\n    </Link>\r\n    <Link to=\"/contact\" css={[NavLink, lastNavLink]}>\r\n      Contact\r\n    </Link>\r\n  </Navbar>\r\n)\r\n\r\nexport default StickyNav\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { dimensions, colors } from '../styles/variables'\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  flex: 1;\r\n  position: relative;\r\n  padding-top: 0px;\r\n  // padding-bottom: 4rem;\r\n  background-color: ${colors.black};\r\n  border-top: 1px solid ${colors.altWhite.trans};\r\n  min-height: 100vh;\r\n`\r\n\r\ninterface PageProps {\r\n  className?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, className }) => (\r\n  <StyledPage id=\"1\" className={className}>\r\n    {children}\r\n  </StyledPage>\r\n)\r\n\r\nexport default Page\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Row = styled.div`\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\r\n  grid-gap: 0.5rem;\r\n  margin-top: 8rem;\r\n  margin-bottom: 12rem;\r\n  grid-auto-rows: 1fr;\r\n  ${(props: RowProps) => props.cssClass || ''}\r\n`\r\n\r\ninterface RowProps {\r\n  cssClass?: string\r\n}\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { getEmSize } from '../styles/mixins'\r\nimport { widths, dimensions } from '../styles/variables'\r\n\r\ninterface ContainerProps {\r\n  cssClass?: string\r\n}\r\n\r\nconst Grid = styled.section`\r\n  overflow: hidden;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: ${getEmSize(widths.lg)}em;\r\n  padding: 0 ${dimensions.containerPadding}rem;\r\n  width: auto;\r\n  ${(props: ContainerProps) => props.cssClass || ''}\r\n`\r\n\r\nconst Container: React.FC<ContainerProps> = ({ children, cssClass }) => <Grid cssClass={cssClass}>{children}</Grid>\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport { css } from '@emotion/core'\r\nimport { colors, dimensions } from '../styles/variables'\r\n\r\nconst StyledFooter = styled.footer`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${colors.brand}32;\r\n  // background: transparent;\r\n  padding: 0.5rem 1rem;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  padding-top: 4rem;\r\n  // opacity: 0.5;\r\n`\r\nconst NavLink = css`\r\n  background: ${colors.black};\r\n  color: ${colors.white};\r\n  padding: 0.5rem 1rem;\r\n  margin: 0.5rem;\r\n  border: 0.1rem solid ${colors.red};\r\n`\r\n\r\nconst Footer = () => (\r\n  <StyledFooter>\r\n    <p>Rossmacd Â© 2020</p>\r\n    <span>\r\n      <Link to=\"/contact\">Contact Me</Link> | <Link to=\"/projects\">Projects</Link>\r\n    </span>\r\n  </StyledFooter>\r\n)\r\n\r\nexport default Footer\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { SerializedStyles } from '@emotion/core'\r\n// import { css } from '@emotion/core'\r\n\r\ninterface ColProps {\r\n  cssClass?: string | SerializedStyles\r\n  span: number\r\n}\r\nconst StyledCol = styled.div<ColProps>`\r\n  grid-column: span ${(props: ColProps) => props.span};\r\n  ${(props: ColProps) => props.cssClass || ''}\r\n`\r\n\r\nconst Col: React.FC<ColProps> = ({ children, cssClass, span }) => {\r\n  return (\r\n    <StyledCol cssClass={cssClass} span={span}>\r\n      {children}\r\n    </StyledCol>\r\n  )\r\n}\r\n\r\nexport default Col\r\n"],"sourceRoot":""}