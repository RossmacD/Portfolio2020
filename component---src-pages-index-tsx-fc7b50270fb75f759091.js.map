{"version":3,"sources":["webpack:///./src/components/Display1.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/components/HomeButton.tsx","webpack:///./src/components/Col.tsx","webpack:///./src/components/ScrollIndicator.tsx","webpack:///./src/components/HeroTitle.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Container.tsx","webpack:///./src/components/Hero.tsx","webpack:///./src/components/Display2.tsx"],"names":["StyledDisplay1","colors","black","getEmSize","breakpoints","sm","StyledSpecial1","Display1","children","special","StyledPage","dimensions","containerPadding","altWhite","trans","Page","className","id","StyledButton","HomeButton","to","newWindow","href","target","StyledCol","props","span","cssClass","Col","Arrow","red","ScrollIndicator","HeroTitle","Hero","Display2","IndexPage","Container","role","aria-label","StyledDisplay2"],"mappings":"2JAKMA,EAAiB,kBAAH,oBAAG,CAAH,iMASTC,IAAOC,MATE,wCAWGC,YAAUC,IAAYC,IAXzB,wBAedC,EAAiB,kBAAH,oBAAG,CAAH,kKAOTL,IAAOC,MAPE,4DAuBLK,IAP2B,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,SAC3C,OADmE,EAAdC,QAI9C,YAACH,EAAD,KAAiBE,GAFf,YAACR,EAAD,KAAiBQ,K,wFCjCtBE,EAAa,mBAAH,oBAAG,CAAH,kDAIHC,IAAWC,iBAJR,4CAMMX,IAAOC,MANb,yBAOUD,IAAOY,SAASC,MAP1B,KAoBDC,IANmB,SAAC,GAAD,IAAGP,EAAH,EAAGA,SAAUQ,EAAb,EAAaA,UAAb,OAChC,YAACN,EAAD,CAAYO,GAAG,IAAID,UAAWA,GAC3BR,K,mHCjBCU,EAAe,iBAAH,mBAAG,CAAH,2QA8BHC,EAP+B,SAAC,GAAD,IAAGX,EAAH,EAAGA,SAAUY,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,UAAjB,OAC5C,YAACH,EAAD,CAAcI,KAAMF,EAAIG,OAAQF,EAAY,OAAS,IAClD,IACAb,EAAU,M,YCvBTgB,EAAY,mBAAH,oBAAG,CAAH,qBACO,SAACC,GAAD,OAAqBA,EAAMC,OADlC,KAEX,SAACD,GAAD,OAAqBA,EAAME,UAAY,MAW5BC,EARiB,SAAC,GAAiC,IAA/BpB,EAA+B,EAA/BA,SAAUmB,EAAqB,EAArBA,SAAUD,EAAW,EAAXA,KACrD,OACE,YAACF,EAAD,CAAWG,SAAUA,EAAUD,KAAMA,GAClClB,I,gDCXDqB,EAAQ,iBAAH,mBAAG,CAAH,ilBAwCS5B,IAAO6B,IAxChB,8EA+CS7B,IAAO6B,IA/ChB,6FAgEIC,EAFmB,kBAAM,YAACF,EAAD,CAAOP,KAAK,QCvCrCU,EApBa,WAC1B,OACE,YAAC,IAAD,KACE,YAACC,EAAA,EAAD,KACE,uBACE,YAAC,IAAD,KACE,YAAC1B,EAAA,EAAD,CAAUE,SAAO,GAAjB,SAEF,YAACF,EAAA,EAAD,KACE,YAAC,IAAD,aADF,QAIA,YAAC2B,EAAA,EAAD,+BAGJ,YAAC,EAAD,QCwCSC,UAlDG,kBAChB,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,EAAD,OAGF,YAACpB,EAAA,EAAD,KACE,YAACqB,EAAA,EAAD,KACE,YAAC,IAAD,KACE,YAAC,EAAD,CAAKV,KAAM,GACT,iCACU,YAAC,IAAD,wBAEV,+DACA,gLAIA,+DAEE,oBAAMW,KAAK,MAAMC,aAAW,UAA5B,OAIF,YAAC,EAAD,CAAYlB,GAAG,8BAA8BC,WAAS,GAAtD,aAKF,YAAC,EAAD,CAAKK,KAAM,KAEb,YAAC,IAAD,KACE,YAAC,EAAD,CAAKA,KAAM,IACX,YAAC,EAAD,CAAKA,KAAM,GACT,gDACA,yGACA,iRAIA,6J,kCCpDZ,sCAoBeU,IAF6B,SAAC,GAAD,IAAG5B,EAAH,EAAGA,SAAUQ,EAAb,EAAaA,UAAb,OAA6B,YAAC,IAAD,CAAMA,UAAWA,GAAYR,K,kCClBtG,sCAKeyB,IAFQ,SAAC,GAAD,IAAGzB,EAAH,EAAGA,SAAH,OAAkB,YAAC,IAAD,KAAaA,K,kGCEhD+B,EAAiB,kBAAH,mBAAG,CAAH,yBAETtC,IAAO6B,IAFE,ySAsBG3B,YAAUC,IAAYC,IAtBzB,sKA8CL6B,IAFY,SAAC,GAAD,IAAG1B,EAAH,EAAGA,SAAH,OAAkB,YAAC+B,EAAD,KAAiB/B","file":"component---src-pages-index-tsx-fc7b50270fb75f759091.js","sourcesContent":["import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { colors, breakpoints } from '../styles/variables'\r\nimport { getEmSize } from '../styles/mixins'\r\n\r\nconst StyledDisplay1 = styled.h1`\r\n  margin-top: 0px;\r\n  margin-bottom: 0px;\r\n  text-transform: uppercase;\r\n  text-shadow: -1px -1px 0px #8400ff, 1px 1px 0px #ff005a;\r\n  letter-spacing: -2.3vw;\r\n  font-size: 15vw;\r\n  margin-left: -2vw;\r\n  text-align: center;\r\n  color: ${colors.black};\r\n  line-height: 1.1ch;\r\n  @media (max-width: ${getEmSize(breakpoints.sm)}em) {\r\n    font-size: 33vw;\r\n  }\r\n`\r\nconst StyledSpecial1 = styled.h1`\r\n  margin-top: 0px;\r\n  margin-bottom: 0px;\r\n  text-transform: uppercase;\r\n  text-shadow: -1px -1px 0px #8400ff, 1px 1px 0px #ff005a;\r\n  letter-spacing: -5.75vw;\r\n  text-align: center;\r\n  color: ${colors.black};\r\n  line-height: 1.1ch;\r\n  margin-left: -5.5vw;\r\n  font-size: 41.25vw;\r\n`\r\ninterface Display1Props {\r\n  special?: boolean\r\n}\r\n\r\nconst Display1: React.FC<Display1Props> = ({ children, special }) => {\r\n  if (!special) {\r\n    return <StyledDisplay1>{children}</StyledDisplay1>\r\n  }\r\n  return <StyledSpecial1>{children}</StyledSpecial1>\r\n}\r\n\r\nexport default Display1\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { dimensions, colors } from '../styles/variables'\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  flex: 1;\r\n  position: relative;\r\n  padding: ${dimensions.containerPadding}rem;\r\n  padding-bottom: 4rem;\r\n  background-color: ${colors.black};\r\n  border-top: 1px solid ${colors.altWhite.trans};\r\n`\r\n\r\ninterface PageProps {\r\n  className?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, className }) => (\r\n  <StyledPage id=\"1\" className={className}>\r\n    {children}\r\n  </StyledPage>\r\n)\r\n\r\nexport default Page\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n// import { Link } from 'gatsby'\r\n\r\nconst StyledButton = styled.a`\r\n  display: inline-block;\r\n  text-transform: uppercase;\r\n  color: #ff005a;\r\n  text-decoration: none;\r\n  border: 2px solid;\r\n  background: transparent;\r\n  padding: 10px 40px;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  -webkit-transition: 0.2s all;\r\n  transition: 0.2s all;\r\n  :hover {\r\n    color: #8400ff;\r\n  }\r\n`\r\n\r\ninterface HomeButtonProps {\r\n  className?: string\r\n  to: string\r\n  newWindow: boolean\r\n}\r\n\r\nconst HomeButton: React.FC<HomeButtonProps> = ({ children, to, newWindow }) => (\r\n  <StyledButton href={to} target={newWindow ? 'href' : ''}>\r\n    {' '}\r\n    {children}{' '}\r\n  </StyledButton>\r\n)\r\n\r\nexport default HomeButton\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\ninterface ColProps {\r\n  cssClass?: string\r\n  span: number\r\n}\r\nconst StyledCol = styled.div<ColProps>`\r\n  grid-column: span ${(props: ColProps) => props.span};\r\n  ${(props: ColProps) => props.cssClass || ''}\r\n`\r\n\r\nconst Col: React.FC<ColProps> = ({ children, cssClass, span }) => {\r\n  return (\r\n    <StyledCol cssClass={cssClass} span={span}>\r\n      {children}\r\n    </StyledCol>\r\n  )\r\n}\r\n\r\nexport default Col\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { colors } from '../styles/variables'\r\n\r\nconst Arrow = styled.a`\r\n  width: 6vmin;\r\n  height: 6vmin;\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  bottom: 6vmin;\r\n  left: 47vw;\r\n  transform: rotate(135deg);\r\n  opacity: 0%;\r\n  animation: fade-in 6s ease-in 1s 1 forwards;\r\n\r\n  &::before {\r\n    content: '';\r\n    width: 100%;\r\n    height: 100%;\r\n    border-width: 0.8vmin 0.8vmin 0 0;\r\n    border-style: solid;\r\n    border-color: #fafafa;\r\n    transition: 0.2s ease;\r\n    display: block;\r\n    transform-origin: 100% 0;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    float: left;\r\n    position: relative;\r\n    top: -100%;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    border-width: 0 0.8vmin 0 0;\r\n    border-style: solid;\r\n    border-color: #fafafa;\r\n    transform-origin: 100% 0;\r\n    transition: 0.2s ease;\r\n  }\r\n\r\n  &:hover::after {\r\n    transform: rotate(45deg);\r\n    border-color: ${colors.red};\r\n    height: 120%;\r\n    margin-top: 0.6vmin;\r\n    opacity: 100%;\r\n  }\r\n\r\n  &:hover::before {\r\n    border-color: ${colors.red};\r\n    transform: scale(0.8);\r\n    opacity: 100%;\r\n  }\r\n\r\n  @keyframes fade-in {\r\n    0% {\r\n      opacity: 0%;\r\n    }\r\n    100% {\r\n      opacity: 80%;\r\n    }\r\n  }\r\n`\r\n\r\nconst ScrollIndicator: React.FC = () => <Arrow href=\"#1\" />\r\n\r\nexport default ScrollIndicator\r\n","import * as React from 'react'\r\nimport { StyledHero, FixedDiv, DesktopHide, DesktopShow } from '../styles/simpleComponents'\r\nimport Hero from './Hero'\r\nimport Display1 from './Display1'\r\nimport Display2 from './Display2'\r\nimport ScrollIndicator from './ScrollIndicator'\r\n\r\nconst HeroTitle: React.FC = () => {\r\n  return (\r\n    <FixedDiv>\r\n      <Hero>\r\n        <div>\r\n          <DesktopHide>\r\n            <Display1 special>Ross</Display1>\r\n          </DesktopHide>\r\n          <Display1>\r\n            <DesktopShow>Ross</DesktopShow>\r\n            MacD\r\n          </Display1>\r\n          <Display2>Full-Stack developer</Display2>\r\n        </div>\r\n      </Hero>\r\n      <ScrollIndicator />\r\n    </FixedDiv>\r\n  )\r\n}\r\n\r\nexport default HeroTitle\r\n","import * as React from 'react'\r\n// import { Link } from 'gatsby'\r\nimport Page from '../components/Page'\r\nimport Container from '../components/Container'\r\nimport IndexLayout from '../layouts'\r\n// import Showcase from '../components/showcase'\r\nimport HomeButton from '../components/HomeButton'\r\nimport { DocflowFix, Row, ShadowSpan } from '../styles/simpleComponents'\r\nimport Col from '../components/Col'\r\nimport HeroTitle from '../components/HeroTitle'\r\nimport { genClass } from '../styles/genericClasses'\r\n\r\nconst IndexPage = () => (\r\n  <IndexLayout>\r\n    <DocflowFix>\r\n      <HeroTitle />\r\n      {/* <HeroAnimated /> */}\r\n    </DocflowFix>\r\n    <Page>\r\n      <Container>\r\n        <Row>\r\n          <Col span={3}>\r\n            <h1>\r\n              Hi, I'm <ShadowSpan>Ross MacDonald</ShadowSpan>\r\n            </h1>\r\n            <p>I develop websites, software and apps </p>\r\n            <p>\r\n              Im an Irish full-stack developer who has experience with many technologies. Creating apps as both a leader of development and\r\n              in a supporting capacity.\r\n            </p>\r\n            <p>\r\n              Here are some projects I have worked on\r\n              <span role=\"img\" aria-label=\"laptop\">\r\n                ðŸ’»\r\n              </span>\r\n            </p>\r\n            <HomeButton to=\"https://github.com/RossmacD\" newWindow>\r\n              See More\r\n            </HomeButton>\r\n          </Col>\r\n          {/* <Col cssClass={genClass.altBG} span={3} /> */}\r\n          <Col span={3} />\r\n        </Row>\r\n        <Row>\r\n          <Col span={3}>{/* temp */}</Col>\r\n          <Col span={3}>\r\n            <h1>You do the Full-stack?</h1>\r\n            <p>Yep, I have experience with front-end, backend and the networking side of things</p>\r\n            <p>\r\n              I have experience in many languages like Typescript, Javascript, Node, Java, PHP and Rust. I know technologies like React.js,\r\n              React Native, Vue.js, Socket.IO, Pusher, MongoDb and MySQL / Postgres. In fact I made this site using React.js and Gatsby!\r\n            </p>\r\n            <p>\r\n              I can also help with deployment, having used continous integration workflows and having some experience with docker and linux\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Page>\r\n  </IndexLayout>\r\n)\r\n\r\nexport default IndexPage\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { Grid } from '../styles/simpleComponents'\r\n\r\n// const StyledContainer = styled.div`\r\n//   position: relative;\r\n//   margin-left: auto;\r\n//   margin-right: auto;\r\n//   margin-top: 150px;\r\n//   width: auto;\r\n//   max-width: ${getEmSize(widths.lg)}em;\r\n// `\r\n\r\ninterface ContainerProps {\r\n  className?: string\r\n}\r\n\r\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <Grid className={className}>{children}</Grid>\r\n\r\nexport default Container\r\n","import * as React from 'react'\r\nimport { StyledHero } from '../styles/simpleComponents'\r\n\r\nconst Hero: React.FC = ({ children }) => <StyledHero>{children}</StyledHero>\r\n\r\nexport default Hero\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { getEmSize } from '../styles/mixins'\r\nimport { breakpoints, colors } from '../styles/variables'\r\n\r\nconst StyledDisplay2 = styled.h2`\r\n  margin-top: -2vw;\r\n  color: ${colors.red};\r\n  margin-bottom: 0px;\r\n  text-transform: uppercase;\r\n  text-shadow: 0px 2px 0px #8400ff;\r\n  font-size: 5vw;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  animation: float 10s ease-in-out infinite;\r\n  @keyframes float {\r\n    0% {\r\n      transform: translatey(0px);\r\n    }\r\n    50% {\r\n      transform: translatey(2vw);\r\n    }\r\n    100% {\r\n      transform: translatey(0px);\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${getEmSize(breakpoints.sm)}em) {\r\n    margin-left: -1vw;\r\n    font-size: 14vw;\r\n    margin-top: 2vh;\r\n\r\n    @keyframes float {\r\n      0% {\r\n        transform: translatey(0px);\r\n      }\r\n      50% {\r\n        transform: translatey(0vh);\r\n      }\r\n      100% {\r\n        transform: translatey(0px);\r\n      }\r\n  }\r\n`\r\n\r\n// interface Display1Props {\r\n//   text: string\r\n// }\r\n\r\nconst Display2: React.FC = ({ children }) => <StyledDisplay2>{children}</StyledDisplay2>\r\n\r\nexport default Display2\r\n"],"sourceRoot":""}