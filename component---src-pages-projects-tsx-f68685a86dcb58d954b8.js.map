{"version":3,"sources":["webpack:///./src/components/StickyNav.tsx","webpack:///./src/pages/projects.tsx"],"names":["Navbar","dimensions","containerPadding","NavLink","css","colors","black","white","red","lastNavLink","StickyNav","to","ProjectsPage","query","projectsQueryShort","render","data","cssClass","span","allMarkdownRemark","nodes","sort","b","a","frontmatter","number","map","markdownNode","i","key","id","title","description","fields","slug","category"],"mappings":"yKAMMA,EAAS,mBAAH,mBAAG,CAAH,gKAUOC,IAAWC,iBAVlB,QAYNC,EAAUC,YAAH,cACGC,IAAOC,MADV,UAEFD,IAAOE,MAFL,0DAKYF,IAAOG,IALnB,KAOPC,EAAc,CAAH,4C,oEAiCFC,IA9BG,kBAChB,YAACV,EAAD,KACE,YAAC,OAAD,CACEW,GAAG,IACHP,IAAG,YAAE,CACHD,EADG,KAFP,aAmBA,YAAC,OAAD,CAAMQ,GAAG,YAAYP,IAAKD,GAA1B,YAGA,YAAC,OAAD,CAAMQ,GAAG,WAAWP,IAAG,YAAE,CAACD,EAASM,KAAnC,c,6LCcWG,UApDM,kBACnB,YAAC,cAAD,CACEC,MAAOC,IACPC,OAAQ,SAACC,GAAD,OACN,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,MACA,YAAC,IAAD,KACE,YAAC,IAAD,CACEC,SAAQ,6FAKR,YAAC,IAAD,CAAKC,KAAM,GACT,kCACA,gIAGJ,YAAC,IAAD,KACE,YAAC,IAAD,CACEA,KAAM,EACND,SAAQ,iSASPD,EAAKG,kBAAkBC,MACrBC,MAAK,SAACC,EAAGC,GAAJ,OAAWA,EAAEC,YAAYC,OAASH,EAAEE,YAAYC,OAAS,EAAIH,EAAEE,YAAYC,OAASF,EAAEC,YAAYC,QAAU,EAAI,KACrHC,KAAI,SAACC,EAAcC,GAAf,OACH,YAAC,IAAD,CACEC,IAAKF,EAAaG,GAClBC,MAAOJ,EAAaH,YAAYO,MAChCC,YAAaL,EAAaH,YAAYQ,YACtCrB,GAAIgB,EAAaM,OAAOC,KACxBC,SAAUR,EAAaH,YAAYW,iBAM/C,YAAC,IAAD","file":"component---src-pages-projects-tsx-f68685a86dcb58d954b8.js","sourcesContent":["import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport { css } from '@emotion/core'\r\nimport { colors, dimensions } from '../styles/variables'\r\n\r\nconst Navbar = styled.nav`\r\n  position: sticky;\r\n  position: -webkit-sticky;\r\n  display: flex;\r\n  top: 0px;\r\n  z-index: 99999;\r\n  // background: ${colors.black};\r\n  background: transparent;\r\n  padding: 0.5rem 1rem;\r\n  justify-content:flex-end;\r\n  margin-bottom: ${dimensions.containerPadding}rem;\r\n`\r\nconst NavLink = css`\r\n  background: ${colors.black};\r\n  color: ${colors.white};\r\n  padding: 0.5rem 1rem;\r\n  margin: 0.5rem;\r\n  border: 0.1rem solid ${colors.red};\r\n`\r\nconst lastNavLink = css`\r\n  margin-right: 5rem;\r\n`\r\nconst StickyNav = () => (\r\n  <Navbar>\r\n    <Link\r\n      to=\"/\"\r\n      css={[\r\n        NavLink,\r\n        css`\r\n          display: inline-block;\r\n          margin-right: auto;\r\n        `\r\n      ]}\r\n    >\r\n      {/* <h1\r\n        css={css`\r\n          display: inline-block;\r\n          margin-left: auto;\r\n        `}\r\n      > */}\r\n      Ross MacD\r\n      {/* </h1> */}\r\n    </Link>\r\n    <Link to=\"/projects\" css={NavLink}>\r\n      Projects\r\n    </Link>\r\n    <Link to=\"/contact\" css={[NavLink, lastNavLink]}>\r\n      Contact\r\n    </Link>\r\n  </Navbar>\r\n)\r\n\r\nexport default StickyNav\r\n","import * as React from 'react'\r\nimport { Link, StaticQuery } from 'gatsby'\r\n\r\nimport { css } from '@emotion/core'\r\nimport Page from '../components/Page'\r\nimport Container from '../components/Container'\r\nimport IndexLayout from '../layouts'\r\nimport StickyNav from '../components/StickyNav'\r\nimport { Row } from '../components/Row'\r\nimport Col from '../components/Col'\r\nimport { projectsQueryShort, ProjectsShortReturn } from '../components/ProjectCarousel'\r\nimport ProjectShortCard from '../components/ProjectShortCard'\r\nimport Footer from '../components/Footer'\r\n\r\nconst ProjectsPage = () => (\r\n  <StaticQuery\r\n    query={projectsQueryShort}\r\n    render={(data: ProjectsShortReturn) => (\r\n      <IndexLayout>\r\n        <Page>\r\n          <StickyNav />\r\n          <Container>\r\n            <Row\r\n              cssClass={`\r\n                 margin-bottom:0;\r\n                  margin-top:4rem;\r\n                `}\r\n            >\r\n              <Col span={6}>\r\n                <h1>Projects</h1>\r\n                <p>Here are some of the projects that I have worked on, most of which are commercial, see more on Github</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col\r\n                span={6}\r\n                cssClass={`\r\n                  // margin-top: 1rem;\r\n                  display: grid;\r\n                  grid-auto-rows: 1fr;\r\n                  grid-template-columns: repeat(auto-fit, minmax(24.4rem, 1fr));\r\n                  width: 100%;\r\n                  grid-row-gap: 1rem;\r\n                `}\r\n              >\r\n                {data.allMarkdownRemark.nodes\r\n                  .sort((b, a) => (a.frontmatter.number > b.frontmatter.number ? 1 : b.frontmatter.number > a.frontmatter.number ? -1 : 0))\r\n                  .map((markdownNode, i) => (\r\n                    <ProjectShortCard\r\n                      key={markdownNode.id}\r\n                      title={markdownNode.frontmatter.title}\r\n                      description={markdownNode.frontmatter.description}\r\n                      to={markdownNode.fields.slug}\r\n                      category={markdownNode.frontmatter.category}\r\n                    />\r\n                  ))}\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Footer />\r\n        </Page>\r\n      </IndexLayout>\r\n    )}\r\n  />\r\n)\r\n\r\nexport default ProjectsPage\r\n"],"sourceRoot":""}