{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx","webpack:///./src/components/Display2.tsx"],"names":["PageTemplate","data","hide","markdownRemark","frontmatter","title","description","dangerouslySetInnerHTML","__html","html","query","StyledPage","dimensions","containerPadding","colors","black","altWhite","trans","Page","children","className","id","Grid","getEmSize","widths","lg","props","cssClass","Container","StyledDisplay2","red","breakpoints","sm","Display2","React"],"mappings":"6FAAA,uHA4CeA,UAbmC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChD,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAUC,MAAM,GAAQD,EAAKE,eAAeC,YAAYC,OACxD,sBAAKJ,EAAKE,eAAeC,YAAYE,aAErC,mBAAKC,wBAAyB,CAAEC,OAAQP,EAAKE,eAAeM,YAQ7D,IAAMC,EAAQ,c,wFCzCfC,EAAa,mBAAH,oBAAG,CAAH,sDAICC,IAAWC,iBAJZ,4CAMMC,IAAOC,MANb,yBAOUD,IAAOE,SAASC,MAP1B,KAoBDC,IANmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAb,OAChC,YAACT,EAAD,CAAYU,GAAG,IAAID,UAAWA,GAC3BD,K,kGCZCG,EAAO,uBAAH,oBAAG,CAAH,gEAIKC,YAAUC,IAAOC,IAJtB,gBAKKb,IAAWC,iBALhB,mBAON,SAACa,GAAD,OAA2BA,EAAMC,UAAY,MAKlCC,IAF6B,SAAC,GAAD,IAAGT,EAAH,EAAGA,SAAUQ,EAAb,EAAaA,SAAb,OAA4B,YAACL,EAAD,CAAMK,SAAUA,GAAWR,K,kGCd7FU,EAAiB,kBAAH,mBAAG,CAAH,yBAETf,IAAOgB,IAFE,iHASGP,YAAUQ,IAAYC,IATzB,wDAehB,SAACN,GACD,OAAOA,EAAMxB,KAAN,+xBAoDI+B,IAP2B,SAAC,GAAuB,IAArBd,EAAqB,EAArBA,SAAUjB,EAAW,EAAXA,KAIrD,OAHAgC,aAAgB,cAEb,CAAChC,IACG,YAAC2B,EAAD,CAAgB3B,KAAMA,GAAOiB","file":"component---src-templates-page-tsx-47b0f3f1065a603d0dc7.js","sourcesContent":["import * as React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Page from '../components/Page'\r\nimport Container from '../components/Container'\r\nimport IndexLayout from '../layouts'\r\nimport Display2 from '../components/Display2'\r\n\r\ninterface PageTemplateProps {\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string\r\n        description: string\r\n        author: {\r\n          name: string\r\n          url: string\r\n        }\r\n      }\r\n    }\r\n    markdownRemark: {\r\n      html: string\r\n      excerpt: string\r\n      frontmatter: {\r\n        title: string\r\n        description: string\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst PageTemplate: React.FC<PageTemplateProps> = ({ data }) => (\r\n  <IndexLayout>\r\n    <Page>\r\n      <Container>\r\n        <Display2 hide={false}>{data.markdownRemark.frontmatter.title}</Display2>\r\n        <h1>{data.markdownRemark.frontmatter.description}</h1>\r\n        {/* eslint-disable-next-line react/no-danger */}\r\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\r\n      </Container>\r\n    </Page>\r\n  </IndexLayout>\r\n)\r\n\r\nexport default PageTemplate\r\n\r\nexport const query = graphql`\r\n  query PageTemplateQuery($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author {\r\n          name\r\n          url\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { dimensions, colors } from '../styles/variables'\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  flex: 1;\r\n  position: relative;\r\n  padding-top: ${dimensions.containerPadding}rem;\r\n  padding-bottom: 4rem;\r\n  background-color: ${colors.black};\r\n  border-top: 1px solid ${colors.altWhite.trans};\r\n`\r\n\r\ninterface PageProps {\r\n  className?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, className }) => (\r\n  <StyledPage id=\"1\" className={className}>\r\n    {children}\r\n  </StyledPage>\r\n)\r\n\r\nexport default Page\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { getEmSize } from '../styles/mixins'\r\nimport { widths, dimensions } from '../styles/variables'\r\n\r\ninterface ContainerProps {\r\n  cssClass?: string\r\n}\r\n\r\nconst Grid = styled.section`\r\n  overflow: hidden;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: ${getEmSize(widths.lg)}em;\r\n  padding: 0 ${dimensions.containerPadding}rem;\r\n  width: auto;\r\n  ${(props: ContainerProps) => props.cssClass || ''}\r\n`\r\n\r\nconst Container: React.FC<ContainerProps> = ({ children, cssClass }) => <Grid cssClass={cssClass}>{children}</Grid>\r\n\r\nexport default Container\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { getEmSize } from '../styles/mixins'\r\nimport { breakpoints, colors } from '../styles/variables'\r\n\r\nconst StyledDisplay2 = styled.h2`\r\n  margin-top: -1vw;\r\n  color: ${colors.red};\r\n  margin-bottom: 0px;\r\n  text-transform: uppercase;\r\n  font-size: 5vw;\r\n  text-align: center;\r\n  font-weight: 700;\r\n\r\n  @media (max-width: ${getEmSize(breakpoints.sm)}em) {\r\n    margin-left: -1vw;\r\n    font-size: 14vw;\r\n    margin-top: 2vh;\r\n  }\r\n\r\n  ${(props: Display2Props) => {\r\n    return props.hide\r\n      ? `\r\n      opacity:100%;\r\n      animation: fadeout 0.5s ease-out forwards!important;\r\n      @keyframes fadeout {\r\n        0% {\r\n          opacity: 100%;\r\n        }\r\n        99% {\r\n          display: block;\r\n          opacity: 0;\r\n          transform:translateY(-5vh)\r\n        }\r\n        100% {\r\n          opacity: 0;\r\n          display: none;\r\n        }\r\n      }\r\n    `\r\n      : `\r\n      opacity:0%;\r\n      animation: fadein3 0.5s ease-out 0.5s forwards!important;\r\n          @keyframes fadein3 {\r\n            0% {\r\n              opacity: 0;\r\n              display: none;\r\n            }\r\n            1% {\r\n              display: block;\r\n              opacity: 0;\r\n              transform:translateY(-5vh)\r\n            }\r\n            100% {\r\n              opacity: 100%;\r\n\r\n            }\r\n          }\r\n    `\r\n  }}\r\n`\r\n\r\ninterface Display2Props {\r\n  hide: boolean\r\n}\r\n\r\nconst Display2: React.FC<Display2Props> = ({ children, hide }) => {\r\n  React.useEffect(() => {\r\n    // console.log(hide)\r\n  }, [hide])\r\n  return <StyledDisplay2 hide={hide}>{children}</StyledDisplay2>\r\n}\r\n\r\nexport default Display2\r\n"],"sourceRoot":""}