{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./src/components/StickyNav.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/Display2.tsx"],"names":["PageTemplate","data","hide","markdownRemark","frontmatter","title","description","dangerouslySetInnerHTML","__html","html","query","Navbar","dimensions","containerPadding","NavLink","css","colors","black","white","red","lastNavLink","StickyNav","to","StyledPage","altWhite","trans","Page","children","className","id","Grid","getEmSize","widths","lg","props","cssClass","Container","StyledFooter","brand","Footer","StyledDisplay2","breakpoints","sm","Display2","React"],"mappings":"6FAAA,+IAgDeA,UAfmC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChD,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,MACA,YAAC,IAAD,KACE,YAAC,IAAD,CAAUC,MAAM,GAAQD,EAAKE,eAAeC,YAAYC,OACxD,sBAAKJ,EAAKE,eAAeC,YAAYE,aAErC,mBAAKC,wBAAyB,CAAEC,OAAQP,EAAKE,eAAeM,SAE9D,YAAC,IAAD,SAOC,IAAMC,EAAQ,c,gHC5CfC,EAAS,mBAAH,mBAAG,CAAH,gKAUOC,IAAWC,iBAVlB,QAYNC,EAAUC,YAAH,cACGC,IAAOC,MADV,UAEFD,IAAOE,MAFL,0DAKYF,IAAOG,IALnB,KAOPC,EAAc,CAAH,4C,oEAiCFC,IA9BG,kBAChB,YAACV,EAAD,KACE,YAAC,OAAD,CACEW,GAAG,IACHP,IAAG,YAAE,CACHD,EADG,KAFP,aAmBA,YAAC,OAAD,CAAMQ,GAAG,YAAYP,IAAKD,GAA1B,YAGA,YAAC,OAAD,CAAMQ,GAAG,WAAWP,IAAG,YAAE,CAACD,EAASM,KAAnC,c,wFC/CEG,EAAa,mBAAH,oBAAG,CAAH,2EAMMP,IAAOC,MANb,yBAOUD,IAAOQ,SAASC,MAP1B,sBAqBDC,IANmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAb,OAChC,YAACL,EAAD,CAAYM,GAAG,IAAID,UAAWA,GAC3BD,K,kGCbCG,EAAO,uBAAH,oBAAG,CAAH,gEAIKC,YAAUC,IAAOC,IAJtB,gBAKKrB,IAAWC,iBALhB,mBAON,SAACqB,GAAD,OAA2BA,EAAMC,UAAY,MAKlCC,IAF6B,SAAC,GAAD,IAAGT,EAAH,EAAGA,SAAUQ,EAAb,EAAaA,SAAb,OAA4B,YAACL,EAAD,CAAMK,SAAUA,GAAWR,K,kGCb7FU,EAAe,sBAAH,oBAAG,CAAH,iDAGFrB,IAAOsB,MAHL,mFAYFtB,IAAOC,MACZD,IAAOE,MAGOF,IAAOG,IAYjBoB,IATA,kBACb,YAACF,EAAD,KACE,wCACA,wBACE,YAAC,OAAD,CAAMf,GAAG,YAAT,eADF,MAC2C,YAAC,OAAD,CAAMA,GAAG,aAAT,gB,kGCxBzCkB,EAAiB,kBAAH,mBAAG,CAAH,yBAETxB,IAAOG,IAFE,iHASGY,YAAUU,IAAYC,IATzB,wDAehB,SAACR,GACD,OAAOA,EAAMhC,KAAN,+xBAoDIyC,IAP2B,SAAC,GAAuB,IAArBhB,EAAqB,EAArBA,SAAUzB,EAAW,EAAXA,KAIrD,OAHA0C,aAAgB,cAEb,CAAC1C,IACG,YAACsC,EAAD,CAAgBtC,KAAMA,GAAOyB","file":"component---src-templates-page-tsx-5598405e5b86199a6825.js","sourcesContent":["import * as React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Page from '../components/Page'\r\nimport Container from '../components/Container'\r\nimport IndexLayout from '../layouts'\r\nimport Display2 from '../components/Display2'\r\nimport StickyNav from '../components/StickyNav'\r\nimport Footer from '../components/Footer'\r\n\r\ninterface PageTemplateProps {\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string\r\n        description: string\r\n        author: {\r\n          name: string\r\n          url: string\r\n        }\r\n      }\r\n    }\r\n    markdownRemark: {\r\n      html: string\r\n      excerpt: string\r\n      frontmatter: {\r\n        title: string\r\n        description: string\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst PageTemplate: React.FC<PageTemplateProps> = ({ data }) => (\r\n  <IndexLayout>\r\n    <Page>\r\n      <StickyNav />\r\n      <Container>\r\n        <Display2 hide={false}>{data.markdownRemark.frontmatter.title}</Display2>\r\n        <h1>{data.markdownRemark.frontmatter.description}</h1>\r\n        {/* eslint-disable-next-line react/no-danger */}\r\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\r\n      </Container>\r\n      <Footer />\r\n    </Page>\r\n  </IndexLayout>\r\n)\r\n\r\nexport default PageTemplate\r\n\r\nexport const query = graphql`\r\n  query PageTemplateQuery($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author {\r\n          name\r\n          url\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport { css } from '@emotion/core'\r\nimport { colors, dimensions } from '../styles/variables'\r\n\r\nconst Navbar = styled.nav`\r\n  position: sticky;\r\n  position: -webkit-sticky;\r\n  display: flex;\r\n  top: 0px;\r\n  z-index: 99999;\r\n  // background: ${colors.black};\r\n  background: transparent;\r\n  padding: 0.5rem 1rem;\r\n  justify-content:flex-end;\r\n  margin-bottom: ${dimensions.containerPadding}rem;\r\n`\r\nconst NavLink = css`\r\n  background: ${colors.black};\r\n  color: ${colors.white};\r\n  padding: 0.5rem 1rem;\r\n  margin: 0.5rem;\r\n  border: 0.1rem solid ${colors.red};\r\n`\r\nconst lastNavLink = css`\r\n  margin-right: 5rem;\r\n`\r\nconst StickyNav = () => (\r\n  <Navbar>\r\n    <Link\r\n      to=\"/\"\r\n      css={[\r\n        NavLink,\r\n        css`\r\n          display: inline-block;\r\n          margin-right: auto;\r\n        `\r\n      ]}\r\n    >\r\n      {/* <h1\r\n        css={css`\r\n          display: inline-block;\r\n          margin-left: auto;\r\n        `}\r\n      > */}\r\n      Ross MacD\r\n      {/* </h1> */}\r\n    </Link>\r\n    <Link to=\"/projects\" css={NavLink}>\r\n      Projects\r\n    </Link>\r\n    <Link to=\"/contact\" css={[NavLink, lastNavLink]}>\r\n      Contact\r\n    </Link>\r\n  </Navbar>\r\n)\r\n\r\nexport default StickyNav\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { dimensions, colors } from '../styles/variables'\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  flex: 1;\r\n  position: relative;\r\n  padding-top: 0px;\r\n  // padding-bottom: 4rem;\r\n  background-color: ${colors.black};\r\n  border-top: 1px solid ${colors.altWhite.trans};\r\n  min-height: 100vh;\r\n`\r\n\r\ninterface PageProps {\r\n  className?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, className }) => (\r\n  <StyledPage id=\"1\" className={className}>\r\n    {children}\r\n  </StyledPage>\r\n)\r\n\r\nexport default Page\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { getEmSize } from '../styles/mixins'\r\nimport { widths, dimensions } from '../styles/variables'\r\n\r\ninterface ContainerProps {\r\n  cssClass?: string\r\n}\r\n\r\nconst Grid = styled.section`\r\n  overflow: hidden;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: ${getEmSize(widths.lg)}em;\r\n  padding: 0 ${dimensions.containerPadding}rem;\r\n  width: auto;\r\n  ${(props: ContainerProps) => props.cssClass || ''}\r\n`\r\n\r\nconst Container: React.FC<ContainerProps> = ({ children, cssClass }) => <Grid cssClass={cssClass}>{children}</Grid>\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport { css } from '@emotion/core'\r\nimport { colors, dimensions } from '../styles/variables'\r\n\r\nconst StyledFooter = styled.footer`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${colors.brand}32;\r\n  // background: transparent;\r\n  padding: 0.5rem 1rem;\r\n  align-items: center;\r\n  padding-bottom: 6rem;\r\n  padding-top: 4rem;\r\n  // opacity: 0.5;\r\n`\r\nconst NavLink = css`\r\n  background: ${colors.black};\r\n  color: ${colors.white};\r\n  padding: 0.5rem 1rem;\r\n  margin: 0.5rem;\r\n  border: 0.1rem solid ${colors.red};\r\n`\r\n\r\nconst Footer = () => (\r\n  <StyledFooter>\r\n    <p>Rossmacd Â© 2020</p>\r\n    <span>\r\n      <Link to=\"/contact\">Contact Me!</Link> | <Link to=\"/projects\">Projects</Link>\r\n    </span>\r\n  </StyledFooter>\r\n)\r\n\r\nexport default Footer\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { getEmSize } from '../styles/mixins'\r\nimport { breakpoints, colors } from '../styles/variables'\r\n\r\nconst StyledDisplay2 = styled.h2`\r\n  margin-top: -1vw;\r\n  color: ${colors.red};\r\n  margin-bottom: 0px;\r\n  text-transform: uppercase;\r\n  font-size: 5vw;\r\n  text-align: center;\r\n  font-weight: 700;\r\n\r\n  @media (max-width: ${getEmSize(breakpoints.sm)}em) {\r\n    margin-left: -1vw;\r\n    font-size: 14vw;\r\n    margin-top: 2vh;\r\n  }\r\n\r\n  ${(props: Display2Props) => {\r\n    return props.hide\r\n      ? `\r\n      opacity:100%;\r\n      animation: fadeout 0.5s ease-out forwards!important;\r\n      @keyframes fadeout {\r\n        0% {\r\n          opacity: 100%;\r\n        }\r\n        99% {\r\n          display: block;\r\n          opacity: 0;\r\n          transform:translateY(-5vh)\r\n        }\r\n        100% {\r\n          opacity: 0;\r\n          display: none;\r\n        }\r\n      }\r\n    `\r\n      : `\r\n      opacity:0%;\r\n      animation: fadein3 0.5s ease-out 0.3s forwards!important;\r\n          @keyframes fadein3 {\r\n            0% {\r\n              opacity: 0;\r\n              display: none;\r\n            }\r\n            1% {\r\n              display: block;\r\n              opacity: 0;\r\n              transform:translateY(-5vh)\r\n            }\r\n            100% {\r\n              opacity: 100%;\r\n\r\n            }\r\n          }\r\n    `\r\n  }}\r\n`\r\n\r\ninterface Display2Props {\r\n  hide: boolean\r\n}\r\n\r\nconst Display2: React.FC<Display2Props> = ({ children, hide }) => {\r\n  React.useEffect(() => {\r\n    // console.log(hide)\r\n  }, [hide])\r\n  return <StyledDisplay2 hide={hide}>{children}</StyledDisplay2>\r\n}\r\n\r\nexport default Display2\r\n"],"sourceRoot":""}