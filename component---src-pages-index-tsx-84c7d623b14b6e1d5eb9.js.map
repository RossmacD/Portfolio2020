{"version":3,"sources":["webpack:///./src/components/Display1.tsx","webpack:///./src/components/scrolldown.tsx","webpack:///./src/components/HomeButton.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Hero.tsx","webpack:///./src/components/Display2.tsx"],"names":["StyledDisplay1","colors","black","getEmSize","breakpoints","sm","Display1","children","ScrollButton","Mouse","Move","ScrollDown","href","StyledButton","LayoutMain","to","newWindow","target","FixedDiv","DocflowFix","Row","Col","DesktopHide","IndexPage","Hero","Display2","role","aria-label","Page","Container","HomeButton","StyledHero","StyledDisplay2"],"mappings":"2JAKMA,EAAiB,kBAAH,mBAAG,CAAH,iMASTC,IAAOC,MATE,wCAWGC,YAAUC,IAAYC,IAXzB,yCAuBLC,IAFY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,YAACP,EAAD,KAAiBO,K,yJCvBxDC,EAAe,iBAAH,oBAAG,CAAH,0CAIZC,EAAQ,oBAAH,oBAAG,CAAH,8JAWLC,EAAO,oBAAH,oBAAG,CAAH,6UAiCKC,EARc,kBAC3B,YAACH,EAAD,CAAcI,KAAK,MACjB,YAACH,EAAD,KACE,YAACC,EAAD,SC1CAG,EAAe,iBAAH,mBAAG,CAAH,2QA8BHC,EAP+B,SAAC,GAAD,IAAGP,EAAH,EAAGA,SAAUQ,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,UAAjB,OAC5C,YAACH,EAAD,CAAcD,KAAMG,EAAIE,OAAQD,EAAY,OAAS,IAClD,IACAT,EAAU,M,wBCdTW,EAAW,mBAAH,mBAAG,CAAH,oEAKRC,EAAa,mBAAH,mBAAG,CAAH,qDAKVC,EAAM,mBAAH,mBAAG,CAAH,wCAGHC,EAAM,mBAAH,mBAAG,CAAH,oCAGHC,EAAc,oBAAH,mBAAG,CAAH,qBACMnB,YAAUC,IAAYC,IAD5B,sBAqFFkB,UA/EG,kBAChB,YAAC,IAAD,KACE,YAACJ,EAAD,KACE,YAACD,EAAD,KACE,YAACM,EAAA,EAAD,KACE,uBACE,YAAClB,EAAA,EAAD,YAEE,YAACgB,EAAD,KACE,wBAHJ,OAKM,YAACA,EAAD,eAEN,YAACG,EAAA,EAAD,KACE,oBAAMC,KAAK,MAAMC,aAAW,YAA5B,MADF,0BASJ,YAAC,EAAD,QAGJ,YAACC,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,KACE,YAACT,EAAD,KACE,YAACC,EAAD,KACE,gDACA,+DACA,iRAMA,+DAC0C,IACxC,oBAAMK,KAAK,MAAMC,aAAW,UAA5B,QAKJ,YAACN,EAAD,OAcF,YAACD,EAAD,KACE,YAACC,EAAD,KACE,YAACS,EAAD,CAAYf,GAAG,8BAA8BC,WAAS,GAAtD,UAGA,YAACc,EAAD,CAAYf,GAAG,cAAcC,WAAW,GAAxC,cAGA,YAACc,EAAD,CAAYf,GAAG,+BAA+BC,WAAW,GAAzD,gBAGA,YAACc,EAAD,CAAYf,GAAG,uCAAuCC,WAAS,GAA/D,iB,0ECxGNe,EAAa,mBAAH,oBAAG,CAAH,+FAaDP,IAFQ,SAAC,GAAD,IAAGjB,EAAH,EAAGA,SAAH,OAAkB,YAACwB,EAAD,KAAaxB,K,kGCThDyB,EAAiB,kBAAH,mBAAG,CAAH,sUAsBG7B,YAAUC,IAAYC,IAtBzB,wCAkCLoB,IAFY,SAAC,GAAD,IAAGlB,EAAH,EAAGA,SAAH,OAAkB,YAACyB,EAAD,KAAiBzB","file":"component---src-pages-index-tsx-84c7d623b14b6e1d5eb9.js","sourcesContent":["import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { colors, breakpoints } from '../styles/variables'\r\nimport { getEmSize } from '../styles/mixins'\r\n\r\nconst StyledDisplay1 = styled.h1`\r\n  margin-top: 0px;\r\n  margin-bottom: 0px;\r\n  text-transform: uppercase;\r\n  text-shadow: -1px -1px 0px #8400ff, 1px 1px 0px #ff005a;\r\n  letter-spacing: -2.3vw;\r\n  font-size: 15vw;\r\n  margin-left: -2vw;\r\n  text-align: center;\r\n  color: ${colors.black};\r\n  line-height: 1.1ch;\r\n  @media (max-width: ${getEmSize(breakpoints.sm)}em) {\r\n    margin-left: -5vw;\r\n    font-size: 17vw;\r\n  }\r\n`\r\n\r\n// interface Display1Props {\r\n//   text: string\r\n// }\r\n\r\nconst Display1: React.FC = ({ children }) => <StyledDisplay1>{children}</StyledDisplay1>\r\n\r\nexport default Display1\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst ScrollButton = styled.a`\r\n  display: block;\r\n`\r\n\r\nconst Mouse = styled.span`\r\n  margin: 0 auto;\r\n  display: block;\r\n  border-radius: 50px;\r\n  border: 2px solid #fff;\r\n  height: 80px;\r\n  width: 40px;\r\n  transform: translateY(-10%);\r\n  opacity: 0.5;\r\n`\r\n\r\nconst Move = styled.span`\r\n  position: absolute;\r\n  background-color: #fff;\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  animation: move 5s linear infinite;\r\n  @keyframes move {\r\n    0% {\r\n      transform: translate(-50%, 8px);\r\n      opacity: 0;\r\n    }\r\n    50% {\r\n      transform: translate(-50%, 32px);\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      transform: translate(-50%, 64px);\r\n      opacity: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst ScrollDown: React.FC = () => (\r\n  <ScrollButton href=\"#1\">\r\n    <Mouse>\r\n      <Move />\r\n    </Mouse>\r\n  </ScrollButton>\r\n)\r\n\r\nexport default ScrollDown\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\n\r\nconst StyledButton = styled.a`\r\n  display: inline-block;\r\n  text-transform: uppercase;\r\n  color: #ff005a;\r\n  text-decoration: none;\r\n  border: 2px solid;\r\n  background: transparent;\r\n  padding: 10px 40px;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  -webkit-transition: 0.2s all;\r\n  transition: 0.2s all;\r\n  :hover {\r\n    color: #8400ff;\r\n  }\r\n`\r\n\r\ninterface HomeButtonProps {\r\n  className?: string\r\n  to: string\r\n  newWindow: boolean\r\n}\r\n\r\nconst LayoutMain: React.FC<HomeButtonProps> = ({ children, to, newWindow }) => (\r\n  <StyledButton href={to} target={newWindow ? 'href' : ''}>\r\n    {' '}\r\n    {children}{' '}\r\n  </StyledButton>\r\n)\r\n\r\nexport default LayoutMain\r\n","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport styled from '@emotion/styled'\r\nimport Page from '../components/Page'\r\nimport Container from '../components/Container'\r\nimport IndexLayout from '../layouts'\r\nimport Display1 from '../components/Display1'\r\nimport Display2 from '../components/Display2'\r\nimport Hero from '../components/Hero'\r\nimport ScrollDown from '../components/scrolldown'\r\nimport Showcase from '../components/showcase'\r\nimport HomeButton from '../components/HomeButton'\r\nimport { breakpoints } from '../styles/variables'\r\nimport { getEmSize } from '../styles/mixins'\r\n\r\nconst FixedDiv = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`\r\nconst DocflowFix = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n`\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n`\r\nconst Col = styled.div`\r\n  flex: 0.5;\r\n`\r\nconst DesktopHide = styled.span`\r\n  @media (min-width: ${getEmSize(breakpoints.sm)}em) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst IndexPage = () => (\r\n  <IndexLayout>\r\n    <DocflowFix>\r\n      <FixedDiv>\r\n        <Hero>\r\n          <div>\r\n            <Display1>\r\n              Ross\r\n              <DesktopHide>\r\n                <br />\r\n              </DesktopHide>\r\n              MacD<DesktopHide>onald</DesktopHide>\r\n            </Display1>\r\n            <Display2>\r\n              <span role=\"img\" aria-label=\"Milkyway\">\r\n                ðŸŒŒ\r\n              </span>\r\n              Full-Stack developer\r\n            </Display2>\r\n            {/* https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/microsoft/209/milky-way_1f30c.png 2x */}\r\n          </div>\r\n        </Hero>\r\n        <ScrollDown />\r\n      </FixedDiv>\r\n    </DocflowFix>\r\n    <Page>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <h1>Hi, I'm Ross MacDonald</h1>\r\n            <p>I develop websites, software and apps </p>\r\n            <p>\r\n              I have experience in many languages like Typescript, Javascript, Node, Java, PHP and Rust. I know technologies like React.js,\r\n              React Native, Vue.js, Socket.IO, Pusher, MongoDb and MySQL / Postgres. In fact I made this site using React.js and Gatsby!\r\n            </p>\r\n            {/* <code>Here is some test code</code> */}\r\n            {/* <Link to=\"/page-2/\">Here are some projects I have worked on</Link> */}\r\n            <p>\r\n              Here are some projects I have worked on{' '}\r\n              <span role=\"img\" aria-label=\"laptop\">\r\n                ðŸ’»\r\n              </span>\r\n            </p>\r\n          </Col>\r\n          <Col>\r\n            {/* <Showcase /> */}\r\n\r\n            {/* <HomeButton to=\"https://github.com/RossmacD\" newWindow>\r\n              Github\r\n            </HomeButton>\r\n            <HomeButton to=\"/collisions\" newWindow={false}>\r\n              Collisions\r\n            </HomeButton>\r\n            <HomeButton to=\"https://laravel.rossmacd.com\" newWindow={false}>\r\n              InvoiceAmigo\r\n            </HomeButton> */}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <HomeButton to=\"https://github.com/RossmacD\" newWindow>\r\n              Github\r\n            </HomeButton>\r\n            <HomeButton to=\"/collisions\" newWindow={false}>\r\n              Collisions\r\n            </HomeButton>\r\n            <HomeButton to=\"https://laravel.rossmacd.com\" newWindow={false}>\r\n              InvoiceAmigo\r\n            </HomeButton>\r\n            <HomeButton to=\"https://github.com/drinking-game-app\" newWindow>\r\n              Shcoop\r\n            </HomeButton>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Page>\r\n  </IndexLayout>\r\n)\r\n\r\nexport default IndexPage\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst StyledHero = styled.div`\r\n  height: 80vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\n// interface Display1Props {\r\n//   text: string\r\n// }\r\n\r\nconst Hero: React.FC = ({ children }) => <StyledHero>{children}</StyledHero>\r\n\r\nexport default Hero\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { getEmSize } from '../styles/mixins'\r\nimport { breakpoints } from '../styles/variables'\r\n\r\nconst StyledDisplay2 = styled.h2`\r\n  margin-top: -2vw;\r\n  color: #ff005a;\r\n  margin-bottom: 0px;\r\n  text-transform: uppercase;\r\n  text-shadow: 0px 2px 0px #8400ff;\r\n  font-size: 5vw;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  animation: float 10s ease-in-out infinite;\r\n  @keyframes float {\r\n    0% {\r\n      transform: translatey(0px);\r\n    }\r\n    50% {\r\n      transform: translatey(2vw);\r\n    }\r\n    100% {\r\n      transform: translatey(0px);\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${getEmSize(breakpoints.sm)}em) {\r\n    margin-left: -5vw;\r\n    font-size: 6vw;\r\n  }\r\n`\r\n\r\n// interface Display1Props {\r\n//   text: string\r\n// }\r\n\r\nconst Display2: React.FC = ({ children }) => <StyledDisplay2>{children}</StyledDisplay2>\r\n\r\nexport default Display2\r\n"],"sourceRoot":""}